5/27 weds
html5 basics:
DOM - Document object model
  -a structured representation of a document that can be accessed by applications, sometimes referred to as the DOM tree
Component based and a flash killer, it can do everything that flash used to do
<!DOCTYPE html> means it is HTML5 ready

HOMEWORK
turn resume into a website

6/1 mon

GITHUB-
-allows you to save versions, good for working in teams

IMAGES
-images are placed using the <img> tag
  <img src="img/imageName.jpg" alt="alternative text">
-src attribute is always required, tells where to find image, alt and title are not
  -src can be a relative path, relative to the path that you are currently at
  -../ allows you to go back up the tree, can be used multiple times e.g. ../../
  -can also be an ABSOLUTE PATH
    <img src="/images/logo.png"> this takes you to the root of your entire server
  -you can also use a full URL which points to other servers
  -4 main file formats
    png - can be transparent, usually high quality
    jpg - most versatile, has a sliding scale of quality, no transparency
    gif - can have basic transparency, and be animated, limited color choices
    svg - vector instead of raster, (raster is made of pixels) reserced for icons, line art,
          cannot handle photorealism well, smallest size

CSS
-css begins with a selector, then a property and value within a declaration,
  the whole thing is called a rule, lines always end with semi-colon
  p {color:black;}

6/3 weds

COLORS:
  -you can set value of a color to the name of the color, limited to each browser
  -HEX codes = RGBA, 6 characters, 2 characters for each color, 0-F, with A standing for Alpha, aka opacity
    0 being black, F being white
    0, 1, 2, ... , 9, A, B, ... , F
    red= #FF0000 etc.
  -www.coolors.com for HEX codes and color schemes
  -color.adobe.com
  -HSL: Hue, Saturation, Lightness
      -hue is the color
      -saturation is the amount (boldness) of the color
      -lightness is the amount of white in the color

SIZE
  -can only be changed once an element has position and display
  -width x height are measured in px or %

POSITIONING
  -static is the default setting, following normal flow
  -position:absolute; positions element outside of the normal flow,
    in relation to it's document or top left of container
  -position:relative; positions element relative to where it would be placed
    in a normal flow
  -position:fixed; positions the element outside the normal flow, but stuck in place,
    in relation to the top left
  -to make the positioning relative to border instead of padding :
          *{
            box-sizing: border-box;
          }

CLASSES & ID
  -IDs are unique and Classes can be used repeatedly
  -how to select classes/ids:
    .className{}
    #idName{}

DIVS
  -use a div when the content needs a container


6/10 INTRODUCTION TO PROGRAMMING, INTRODUCTION TO JAVASCRIPT

  DOM- generated by the browser as it parses the text ...

  javascript lets us interact with the DOM

  load dependencies in the <head> and the application logic before end of </body>

  CONSOLE:
    -console.log

  Variables: can be equal to a number
    -always declared with var, must always be named
      -var currentTemp = 64;
    -when naming, start with a lowercase letter
    -can also be equal to strings
      -var text = "abcdg";
    -can also be objects
      -var upButton = document.getElementByID('up');
      -var downButton = document.getElementById('down');
      -var temperatureText = document.getElementByIde('temp');
    -a variable can be an array
      var body = document.getElementsByTagName('body');
      -to select the first object in the array at position 0
          var body = document.getElementsByTagName('body')[0];

    -if a variable is used by multiple functions, make it GLOBAL
      we do this because of 'separation of concerns'

  FUNCTIONS
    -should always be defined

      var init = function() {
        var numberOfStudents = 28;
      };
      init();

  EVENTS
    -addEventListener: a special function, defined on every element with two arguments.
      first is even to listen for, second is the action to complete

  PROTOTYPE
    -javascript follows a prototypical inheritance claime
    -every html element is an instance of Element()
    -instances gain the properties of their Constructor


6/17/15 MORE JAVASCRIPT

  ARRAY
    -a list of items

      var myArray = [0, 1, 'foo', {}];

  ELEMENT
    -a constructor for all HTML elements
    -constructorsare defined with Uppercase first letter
    -createElement, document.createElement, to create elements
    -classList keeps track of all the classes on an element
    -appendChild actually puts the div into the document


  CLASS 10 END OF JUNE

    FEWD-HTML FORMS AND JS EVENTS


7/1/15

  OBJECTS
    - var obj = {} //creates an empty object
  FOR
  - for(vari=0;i<ul.children.length;i++){
    console.log(ul[i]);
}

  //loops from 0 to length of children array
    -DOM children are not true arrays, do not have methods of arrats
    -DOM Nodes us the prototype of ELements
    -acces the Node in the loop using Arrat like syntax

  FOREACH

  arr.forEach(fucntion(tag){
      console.log(tag);
});

    - array.prototype.forEach
    -forEach is a method available on Arrays
    -loops through all items in Array
    -the first argument of callback function is each item.

MVC

  MODEL
    -stores the data to be displayed in the view
    -often JSON, XML, Arrays and Objects are used to store this data

  VIEW
    -displays the content of the data in the table Window

  CONTROLLER
    -reads the data from the model
    -delivers data from the model to the view
    -determinesthe logical operations of a web app

  MV*
  - a framework that further separates the concerns
  -multiple methods that handle the logic
  -usually employs some concept of a controller
  -to name a few:
    -angular
    -ember
    -react
    -meteor
    -backbone
    -knockout
    -YUI
    -polymer


  7/6/15 MVC

    JS REVIEW
    -number (int) 2
    -number (float) 3.12159
    -'this is a string' strings can be concatenated
    -always have to declare variables
    -when you push something into in array it gets inserted into the first item in an array


7/8/15 More CSS


  Non Performant CSS

-positioning elements outside of their container leads to performance issues
-transitioning a color takes a lot of browser work
    -instead, stack elements w/ different colors & fade them instead
-box shadow and border radius together are a bad idea


  Performant CSS

-stay in the box
-transform color w/ canvas or opacity shifts
-avoid border-radius w/ box-shadow
-offload complex
